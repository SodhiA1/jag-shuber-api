package ca.bc.gov.jag.shuber.persistence.model;

import ca.bc.gov.jag.shuber.persistence.AbstractAuditableVersionable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.hibernate.annotations.GenericGenerator;

/**
 * Shift generated by Hibernate Tools hbm2java.
 *
 * <p>Domain model for database table shift.
 *
 * @author hbm2java
 * @version 352
 */
@Entity
@Table(name = "shift"
    // ,schema="shersched"
)
public class Shift extends AbstractAuditableVersionable implements Serializable {

    /** UID. */
    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Column(name = "shift_id", nullable = false, updatable = false)
    private UUID shiftId;

    @NotNull
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "location_id", nullable = false)
    private Courthouse courthouse;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "sheriff_id")
    private Sheriff sheriff;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "shift_template_id")
    private ShiftTemplate shiftTemplate;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "work_section_code")
    private WorkSectionCode workSectionCode;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "start_time", length = 35)
    private Date startTime;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "end_time", length = 35)
    private Date endTime;

    @Size(min = 0, max = 255)
    @Column(name = "shift_status")
    private String shiftStatus;

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "shift")
    private List<Duty> duties = new ArrayList<Duty>(0);
    /** No args constructor. */
    public Shift() {}

    /** Required args constructor. */
    public Shift(
            UUID shiftId,
            Courthouse courthouse,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount) {
        this.shiftId = shiftId;
        this.courthouse = courthouse;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
    }

    /** All args constructor. */
    public Shift(
            UUID shiftId,
            Courthouse courthouse,
            Sheriff sheriff,
            ShiftTemplate shiftTemplate,
            WorkSectionCode workSectionCode,
            Date startTime,
            Date endTime,
            String shiftStatus,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount,
            List<Duty> duties) {
        this.shiftId = shiftId;
        this.courthouse = courthouse;
        this.sheriff = sheriff;
        this.shiftTemplate = shiftTemplate;
        this.workSectionCode = workSectionCode;
        this.startTime = startTime;
        this.endTime = endTime;
        this.shiftStatus = shiftStatus;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
        this.duties = duties;
    }

    public UUID getShiftId() {
        return this.shiftId;
    }

    public void setShiftId(UUID shiftId) {
        this.shiftId = shiftId;
    }

    public Courthouse getCourthouse() {
        return this.courthouse;
    }

    public void setCourthouse(Courthouse courthouse) {
        this.courthouse = courthouse;
    }

    public Sheriff getSheriff() {
        return this.sheriff;
    }

    public void setSheriff(Sheriff sheriff) {
        this.sheriff = sheriff;
    }

    public ShiftTemplate getShiftTemplate() {
        return this.shiftTemplate;
    }

    public void setShiftTemplate(ShiftTemplate shiftTemplate) {
        this.shiftTemplate = shiftTemplate;
    }

    public WorkSectionCode getWorkSectionCode() {
        return this.workSectionCode;
    }

    public void setWorkSectionCode(WorkSectionCode workSectionCode) {
        this.workSectionCode = workSectionCode;
    }

    public Date getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    public Date getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    public String getShiftStatus() {
        return this.shiftStatus;
    }

    public void setShiftStatus(String shiftStatus) {
        this.shiftStatus = shiftStatus;
    }

    public List<Duty> getDuties() {
        return this.duties;
    }

    public void setDuties(List<Duty> duties) {
        this.duties = duties;
    }
}
