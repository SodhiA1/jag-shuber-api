package ca.bc.gov.jag.shuber.persistence.model;

import java.io.Serializable;
import java.util.Date;
import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import ca.bc.gov.jag.shuber.persistence.AbstractAuditableVersionable;

/**
 * Courtroom generated by Hibernate Tools hbm2java.
 *
 * <p>Domain model for database table courtroom.
 *
 * @author hbm2java
 * @version 352
 */
@Entity
@Table(name = "courtroom"
    // ,schema="shersched"
)
public class Courtroom extends AbstractAuditableVersionable implements Serializable {

    /** UID. */
    private static final long serialVersionUID = 1L;

    @GenericGenerator(
        name = "generator",
        strategy = "foreign",
        parameters = @Parameter(name = "property", value = "location")
    )
    @Id
    @GeneratedValue(generator = "generator")
    @Column(name = "location_id", nullable = false, updatable = false)
    private UUID locationId;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "courthouse_location_id")
    private Courthouse courthouse;

    @NotNull
    @OneToOne(fetch = FetchType.EAGER)
    @PrimaryKeyJoinColumn
    private Location location;

    @NotEmpty
    @Size(min = 1, max = 20)
    @Column(name = "room_number", nullable = false, length = 20)
    private String roomNumber;
    
    /** No args constructor. */
    public Courtroom() {}

    /** Required args constructor. */
    public Courtroom(
            Location location,
            String roomNumber,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount) {
        this.location = location;
        this.roomNumber = roomNumber;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
    }

    /** All args constructor. */
    public Courtroom(
            Courthouse courthouse,
            Location location,
            String roomNumber,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount) {
        this.courthouse = courthouse;
        this.location = location;
        this.roomNumber = roomNumber;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
    }

    public UUID getLocationId() {
        return this.locationId;
    }

    public void setLocationId(UUID locationId) {
        this.locationId = locationId;
    }

    public Courthouse getCourthouse() {
        return this.courthouse;
    }

    public void setCourthouse(Courthouse courthouse) {
        this.courthouse = courthouse;
    }

    public Location getLocation() {
        return this.location;
    }

    public void setLocation(Location location) {
        this.location = location;
    }

    public String getRoomNumber() {
        return this.roomNumber;
    }

    public void setRoomNumber(String roomNumber) {
        this.roomNumber = roomNumber;
    }
}
