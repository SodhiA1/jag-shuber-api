package ca.bc.gov.jag.shuber.persistence.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.Size;

import com.fasterxml.jackson.annotation.JsonIgnore;

import ca.bc.gov.jag.shuber.persistence.AbstractTypeCode;

/**
 * WorkSectionCode generated by Hibernate Tools hbm2java.
 *
 * <p>Domain model for database table work_section_code.
 *
 * @author hbm2java
 * @version 352
 */
@Entity
@Table(name = "work_section_code"
    // ,schema="shersched"
)
public class WorkSectionCode extends AbstractTypeCode implements Serializable {

    /** UID. */
    private static final long serialVersionUID = 1L;

    @Id
    @Size(min = 1, max = 20)
    @Column(name = "work_section_code", nullable = false, updatable = false, length = 20)
    private String workSectionCode;

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "workSectionCode")
    private List<DutyTemplate> dutyTemplates = new ArrayList<DutyTemplate>(0);

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "workSectionCode")
    private List<ShiftTemplate> shiftTemplates = new ArrayList<ShiftTemplate>(0);

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "workSectionCode")
    private List<AssignmentStream> assignmentStreams = new ArrayList<AssignmentStream>(0);

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "workSectionCode")
    private List<Shift> shifts = new ArrayList<Shift>(0);

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "workSectionCode")
    private List<Duty> duties = new ArrayList<Duty>(0);
    /** No args constructor. */
    public WorkSectionCode() {}

    /** Required args constructor. */
    public WorkSectionCode(
            String workSectionCode,
            Date effectiveDate,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount) {
        this.workSectionCode = workSectionCode;
        this.effectiveDate = effectiveDate;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
    }

    /** All args constructor. */
    public WorkSectionCode(
            String workSectionCode,
            String description,
            Date effectiveDate,
            Date expiryDate,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount,
            List<DutyTemplate> dutyTemplates,
            List<ShiftTemplate> shiftTemplates,
            List<AssignmentStream> assignmentStreams,
            List<Shift> shifts,
            List<Duty> duties) {
        this.workSectionCode = workSectionCode;
        this.description = description;
        this.effectiveDate = effectiveDate;
        this.expiryDate = expiryDate;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
        this.dutyTemplates = dutyTemplates;
        this.shiftTemplates = shiftTemplates;
        this.assignmentStreams = assignmentStreams;
        this.shifts = shifts;
        this.duties = duties;
    }

    public String getWorkSectionCode() {
        return this.workSectionCode;
    }

    public void setWorkSectionCode(String workSectionCode) {
        this.workSectionCode = workSectionCode;
    }

    public List<DutyTemplate> getDutyTemplates() {
        return this.dutyTemplates;
    }

    public void setDutyTemplates(List<DutyTemplate> dutyTemplates) {
        this.dutyTemplates = dutyTemplates;
    }

    public List<ShiftTemplate> getShiftTemplates() {
        return this.shiftTemplates;
    }

    public void setShiftTemplates(List<ShiftTemplate> shiftTemplates) {
        this.shiftTemplates = shiftTemplates;
    }

    public List<AssignmentStream> getAssignmentStreams() {
        return this.assignmentStreams;
    }

    public void setAssignmentStreams(List<AssignmentStream> assignmentStreams) {
        this.assignmentStreams = assignmentStreams;
    }

    public List<Shift> getShifts() {
        return this.shifts;
    }

    public void setShifts(List<Shift> shifts) {
        this.shifts = shifts;
    }

    public List<Duty> getDuties() {
        return this.duties;
    }

    public void setDuties(List<Duty> duties) {
        this.duties = duties;
    }

    @Transient
	@Override
	public String getTypeCode() {
		return workSectionCode;
	}

}
