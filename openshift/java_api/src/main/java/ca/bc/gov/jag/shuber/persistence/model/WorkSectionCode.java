package ca.bc.gov.jag.shuber.persistence.model;

import ca.bc.gov.jag.shuber.persistence.AbstractAuditableVersionable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * WorkSectionCode generated by Hibernate Tools hbm2java.
 *
 * <p>Domain model for database table work_section_code.
 *
 * @author hbm2java
 * @version 344
 */
@Entity
@Table(name = "work_section_code"
    // ,schema="shersched"
)
public class WorkSectionCode extends AbstractAuditableVersionable implements Serializable {

    /** UID. */
    private static final long serialVersionUID = 1L;

    @Id
    @Size(min = 1, max = 20)
    @Column(name = "work_section_code", nullable = false, updatable = false, length = 20)
    private String workSectionCode;

    @Size(min = 0, max = 100)
    @Column(name = "work_section_description", length = 100)
    private String workSectionDescription;

    @NotNull
    @Temporal(TemporalType.DATE)
    @Column(name = "effective_date", nullable = false, length = 13)
    private Date effectiveDate;

    @Temporal(TemporalType.DATE)
    @Column(name = "expiry_date", length = 13)
    private Date expiryDate;

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "workSectionCode")
    private List<Assignment> assignments = new ArrayList<Assignment>(0);

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "workSectionCode")
    private List<AssignmentCode> assignmentCodes = new ArrayList<AssignmentCode>(0);

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "workSectionCode")
    private List<ShiftTemplate> shiftTemplates = new ArrayList<ShiftTemplate>(0);

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "workSectionCode")
    private List<AssignmentTemplate> assignmentTemplates = new ArrayList<AssignmentTemplate>(0);

    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "workSectionCode")
    private List<Shift> shifts = new ArrayList<Shift>(0);
    /** No args constructor. */
    public WorkSectionCode() {}

    /** Required args constructor. */
    public WorkSectionCode(
            String workSectionCode,
            Date effectiveDate,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount) {
        this.workSectionCode = workSectionCode;
        this.effectiveDate = effectiveDate;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
    }

    /** All args constructor. */
    public WorkSectionCode(
            String workSectionCode,
            String workSectionDescription,
            Date effectiveDate,
            Date expiryDate,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount,
            List<Assignment> assignments,
            List<AssignmentCode> assignmentCodes,
            List<ShiftTemplate> shiftTemplates,
            List<AssignmentTemplate> assignmentTemplates,
            List<Shift> shifts) {
        this.workSectionCode = workSectionCode;
        this.workSectionDescription = workSectionDescription;
        this.effectiveDate = effectiveDate;
        this.expiryDate = expiryDate;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
        this.assignments = assignments;
        this.assignmentCodes = assignmentCodes;
        this.shiftTemplates = shiftTemplates;
        this.assignmentTemplates = assignmentTemplates;
        this.shifts = shifts;
    }

    public String getWorkSectionCode() {
        return this.workSectionCode;
    }

    public void setWorkSectionCode(String workSectionCode) {
        this.workSectionCode = workSectionCode;
    }

    public String getWorkSectionDescription() {
        return this.workSectionDescription;
    }

    public void setWorkSectionDescription(String workSectionDescription) {
        this.workSectionDescription = workSectionDescription;
    }

    public Date getEffectiveDate() {
        return this.effectiveDate;
    }

    public void setEffectiveDate(Date effectiveDate) {
        this.effectiveDate = effectiveDate;
    }

    public Date getExpiryDate() {
        return this.expiryDate;
    }

    public void setExpiryDate(Date expiryDate) {
        this.expiryDate = expiryDate;
    }

    public List<Assignment> getAssignments() {
        return this.assignments;
    }

    public void setAssignments(List<Assignment> assignments) {
        this.assignments = assignments;
    }

    public List<AssignmentCode> getAssignmentCodes() {
        return this.assignmentCodes;
    }

    public void setAssignmentCodes(List<AssignmentCode> assignmentCodes) {
        this.assignmentCodes = assignmentCodes;
    }

    public List<ShiftTemplate> getShiftTemplates() {
        return this.shiftTemplates;
    }

    public void setShiftTemplates(List<ShiftTemplate> shiftTemplates) {
        this.shiftTemplates = shiftTemplates;
    }

    public List<AssignmentTemplate> getAssignmentTemplates() {
        return this.assignmentTemplates;
    }

    public void setAssignmentTemplates(List<AssignmentTemplate> assignmentTemplates) {
        this.assignmentTemplates = assignmentTemplates;
    }

    public List<Shift> getShifts() {
        return this.shifts;
    }

    public void setShifts(List<Shift> shifts) {
        this.shifts = shifts;
    }
}
