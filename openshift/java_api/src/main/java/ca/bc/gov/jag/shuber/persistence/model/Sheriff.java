package ca.bc.gov.jag.shuber.persistence.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

import org.hibernate.annotations.GenericGenerator;

import ca.bc.gov.jag.shuber.persistence.AbstractAuditableVersionable;

/**
 * Sheriff generated by Hibernate Tools hbm2java.
 *
 * <p>Domain model for database table sheriff.
 *
 * @author hbm2java
 * @version 352
 */
@Entity
@Table(name = "sheriff"
    // ,schema="shersched"
)
public class Sheriff extends AbstractAuditableVersionable implements Serializable {

    /** UID. */
    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Column(name = "sheriff_id", nullable = false, updatable = false)
    private UUID sheriffId;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "location_id")
    private Courthouse courthouse;

    @NotEmpty
    @Size(min = 1, max = 20)
    @Column(name = "badge_no", unique = true, nullable = false, length = 20)
    private String badgeNo;

    @NotEmpty
    @Size(min = 1, max = 20)
    @Column(name = "userid", unique = true, nullable = false, length = 20)
    private String userid;

    @Size(min = 0, max = 100)
    @Column(name = "first_name", length = 100)
    private String firstName;

    @Size(min = 0, max = 100)
    @Column(name = "last_name", length = 100)
    private String lastName;

    @Size(min = 0, max = 50)
    @Column(name = "rank", length = 50)
    private String rank;

    @Size(min = 0, max = 200)
    @Column(name = "image_url", length = 200)
    private String imageUrl;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sheriff")
    private List<Shift> shifts = new ArrayList<Shift>(0);
    
    /** No args constructor. */
    public Sheriff() {}

    /** Required args constructor. */
    public Sheriff(
            UUID sheriffId,
            String badgeNo,
            String userid,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount) {
        this.sheriffId = sheriffId;
        this.badgeNo = badgeNo;
        this.userid = userid;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
    }

    /** All args constructor. */
    public Sheriff(
            UUID sheriffId,
            Courthouse courthouse,
            String badgeNo,
            String userid,
            String firstName,
            String lastName,
            String rank,
            String imageUrl,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount,
            List<Shift> shifts) {
        this.sheriffId = sheriffId;
        this.courthouse = courthouse;
        this.badgeNo = badgeNo;
        this.userid = userid;
        this.firstName = firstName;
        this.lastName = lastName;
        this.rank = rank;
        this.imageUrl = imageUrl;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
        this.shifts = shifts;
    }

    public UUID getSheriffId() {
        return this.sheriffId;
    }

    public void setSheriffId(UUID sheriffId) {
        this.sheriffId = sheriffId;
    }

    public Courthouse getCourthouse() {
        return this.courthouse;
    }

    public void setCourthouse(Courthouse courthouse) {
        this.courthouse = courthouse;
    }

    public String getBadgeNo() {
        return this.badgeNo;
    }

    public void setBadgeNo(String badgeNo) {
        this.badgeNo = badgeNo;
    }

    public String getUserid() {
        return this.userid;
    }

    public void setUserid(String userid) {
        this.userid = userid;
    }

    public String getFirstName() {
        return this.firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return this.lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getRank() {
        return this.rank;
    }

    public void setRank(String rank) {
        this.rank = rank;
    }

    public String getImageUrl() {
        return this.imageUrl;
    }

    public void setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
    }

    public List<Shift> getShifts() {
        return this.shifts;
    }

    public void setShifts(List<Shift> shifts) {
        this.shifts = shifts;
    }
    
    //Added Methods
    @Transient
    public String getName() {
    		StringBuilder sb = new StringBuilder();
    		if (lastName != null) sb.append(this.lastName);
    		if (lastName != null && firstName != null) sb.append(", ");
    		if (firstName != null) sb.append(this.firstName);
    		
    		return sb.toString();
    }
    		
}
