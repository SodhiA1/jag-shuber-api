package ca.bc.gov.jag.shuber.persistence.model;

import ca.bc.gov.jag.shuber.persistence.AbstractAuditableVersionable;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.UUID;
import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Type;

/**
 * AssignmentBlock generated by Hibernate Tools hbm2java.
 *
 * <p>Domain model for database table assignment_block.
 *
 * @author hbm2java
 * @version 1.0.0.243
 */
@Entity
@Table(name = "assignment_block"
    // ,schema="shersched"
)
@Generated(
    value = "hbm2java",
    date = "2018-02-21 07:25:02",
    comments = "Generated by Hibernate Tools hbm2java."
)
public class AssignmentBlock extends AbstractAuditableVersionable implements Serializable {
    /** UID. */
    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Column(name = "assignment_block_id", nullable = false, updatable = false)
    private UUID assignmentBlockId;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "shift_id")
    private Shift shift;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "work_section_code")
    private WorkSectionCode workSectionCode;

    @Type(type = "yes_no")
    @Column(name = "fixed_start_flag", nullable = false, length = 1)
    private Boolean fixedStartFlag;

    @Column(name = "start_hour")
    private Integer startHour;

    @Column(name = "length_hours", precision = 131089, scale = 0)
    private BigDecimal lengthHours;
    /** No args constructor. */
    public AssignmentBlock() {}

    /** Required args constructor. */
    public AssignmentBlock(
            UUID assignmentBlockId,
            Boolean fixedStartFlag,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount) {
        this.assignmentBlockId = assignmentBlockId;
        this.fixedStartFlag = fixedStartFlag;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
    }

    /** All args constructor. */
    public AssignmentBlock(
            UUID assignmentBlockId,
            Shift shift,
            WorkSectionCode workSectionCode,
            Boolean fixedStartFlag,
            Integer startHour,
            BigDecimal lengthHours,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount) {
        this.assignmentBlockId = assignmentBlockId;
        this.shift = shift;
        this.workSectionCode = workSectionCode;
        this.fixedStartFlag = fixedStartFlag;
        this.startHour = startHour;
        this.lengthHours = lengthHours;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
    }

    public UUID getAssignmentBlockId() {
        return this.assignmentBlockId;
    }

    public void setAssignmentBlockId(UUID assignmentBlockId) {
        this.assignmentBlockId = assignmentBlockId;
    }

    public Shift getShift() {
        return this.shift;
    }

    public void setShift(Shift shift) {
        this.shift = shift;
    }

    public WorkSectionCode getWorkSectionCode() {
        return this.workSectionCode;
    }

    public void setWorkSectionCode(WorkSectionCode workSectionCode) {
        this.workSectionCode = workSectionCode;
    }

    public Boolean getFixedStartFlag() {
        return this.fixedStartFlag;
    }

    public void setFixedStartFlag(Boolean fixedStartFlag) {
        this.fixedStartFlag = fixedStartFlag;
    }

    public Integer getStartHour() {
        return this.startHour;
    }

    public void setStartHour(Integer startHour) {
        this.startHour = startHour;
    }

    public BigDecimal getLengthHours() {
        return this.lengthHours;
    }

    public void setLengthHours(BigDecimal lengthHours) {
        this.lengthHours = lengthHours;
    }
}
