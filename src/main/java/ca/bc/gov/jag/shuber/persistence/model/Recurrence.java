package ca.bc.gov.jag.shuber.persistence.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;

import org.hibernate.annotations.GenericGenerator;

import ca.bc.gov.jag.shuber.persistence.AbstractAuditableVersionable;

/**
 * Recurrence generated by Hibernate Tools hbm2java.
 *
 * <p>Domain model for database table recurrence.
 *
 * @author hbm2java
 * @version 352
 */
@Entity
@Table(name = "recurrence"
    // ,schema="shersched"
)
public class Recurrence extends AbstractAuditableVersionable implements Serializable {

    /** UID. */
    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(generator = "uuid2")
    @GenericGenerator(name = "uuid2", strategy = "uuid2")
    @Column(name = "recurrence_id", nullable = false, updatable = false)
    private UUID recurrenceId;

    @Temporal(TemporalType.TIME)
    @Column(name = "start_time", length = 15)
    private Date startTime;

    @Temporal(TemporalType.TIME)
    @Column(name = "end_time", length = 15)
    private Date endTime;

    @NotNull
    @Column(name = "recurrence_days_bitmap", nullable = false, precision = 10, scale = 0)
    private long recurrenceDaysBitmap;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "recurrence")
    private List<ShiftTemplate> shiftTemplates = new ArrayList<ShiftTemplate>(0);

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "recurrence")
    private List<DutyTemplate> dutyTemplates = new ArrayList<DutyTemplate>(0);
    
    /** No args constructor. */
    public Recurrence() {}

    /** Required args constructor. */
    public Recurrence(
            UUID recurrenceId,
            long recurrenceDaysBitmap,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount) {
        this.recurrenceId = recurrenceId;
        this.recurrenceDaysBitmap = recurrenceDaysBitmap;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
    }

    /** All args constructor. */
    public Recurrence(
            UUID recurrenceId,
            Date startTime,
            Date endTime,
            long recurrenceDaysBitmap,
            String createdBy,
            String updatedBy,
            Date createdDtm,
            Date updatedDtm,
            long revisionCount,
            List<ShiftTemplate> shiftTemplates,
            List<DutyTemplate> dutyTemplates) {
        this.recurrenceId = recurrenceId;
        this.startTime = startTime;
        this.endTime = endTime;
        this.recurrenceDaysBitmap = recurrenceDaysBitmap;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.createdDtm = createdDtm;
        this.updatedDtm = updatedDtm;
        this.revisionCount = revisionCount;
        this.shiftTemplates = shiftTemplates;
        this.dutyTemplates = dutyTemplates;
    }

    public UUID getRecurrenceId() {
        return this.recurrenceId;
    }

    public void setRecurrenceId(UUID recurrenceId) {
        this.recurrenceId = recurrenceId;
    }

    public Date getStartTime() {
        return this.startTime;
    }

    public void setStartTime(Date startTime) {
        this.startTime = startTime;
    }

    public Date getEndTime() {
        return this.endTime;
    }

    public void setEndTime(Date endTime) {
        this.endTime = endTime;
    }

    public long getRecurrenceDaysBitmap() {
        return this.recurrenceDaysBitmap;
    }

    public void setRecurrenceDaysBitmap(long recurrenceDaysBitmap) {
        this.recurrenceDaysBitmap = recurrenceDaysBitmap;
    }

    public List<ShiftTemplate> getShiftTemplates() {
        return this.shiftTemplates;
    }

    public void setShiftTemplates(List<ShiftTemplate> shiftTemplates) {
        this.shiftTemplates = shiftTemplates;
    }

    public List<DutyTemplate> getDutyTemplates() {
        return this.dutyTemplates;
    }

    public void setDutyTemplates(List<DutyTemplate> dutyTemplates) {
        this.dutyTemplates = dutyTemplates;
    }
}
